// Generated by CoffeeScript 1.6.3
(function() {
  var centerContextOrigin, hyp, initCanvas, resetContextOrigin, sizeCanvas, sizeCanvasesToWindow;

  hyp = function(a, b) {
    return Math.sqrt(a * a + b * b);
  };

  initCanvas = function() {
    window.canvas = document.getElementById('canvas');
    window.ctx = canvas.getContext('2d');
    sizeCanvasesToWindow();
    return window.addEventListener('resize', sizeCanvasesToWindow, false);
  };

  sizeCanvasesToWindow = function() {
    var canvasCopy, contextCopy, d, e, g, height, oh, ow, w, width;
    resetContextOrigin(ctx);
    w = window;
    d = document;
    e = d.documentElement;
    g = d.getElementsByTagName('body')[0];
    width = w.innerWidth || e.clientWidth || g.clientWidth;
    height = w.innerHeight || e.clientHeight || g.clientHeight;
    ow = canvas.width;
    oh = canvas.height;
    canvasCopy = document.createElement('canvas');
    contextCopy = canvasCopy.getContext('2d');
    canvasCopy.width = ow;
    canvasCopy.height = oh;
    sizeCanvas(canvas, width, height);
    return centerContextOrigin(ctx);
  };

  sizeCanvas = function(canvas, width, height) {
    canvas.w_FLOAT = width;
    canvas.h_FLOAT = height;
    canvas.width = width;
    canvas.height = height;
    canvas.top = -height / 2;
    canvas.right = width / 2;
    canvas.bottom = height / 2;
    return canvas.left = -width / 2;
  };

  centerContextOrigin = function(context) {
    context.restore();
    context.translate(context.canvas.w_FLOAT / 2, context.canvas.h_FLOAT / 2);
    return context.save();
  };

  resetContextOrigin = function(context) {
    context.restore();
    context.translate(context.canvas.left, context.canvas.top);
    return context.save();
  };

  initCanvas();

}).call(this);

/*
//@ sourceMappingURL=window.map
*/
